Create me a Vscode Platformio project with C code for a web radio alarm clock running on a Makerfabs MaTouch_ESP32-S3 Parallel TFT with Touch 4.3" module. Use the Hardware and Software specification from .windsurfrules

All the screens and graphical elements shall be displayed using the LVGL library. The code shall include comments to outline what it is doing.
The software should connect to WIFI, get the current date and time and be able to play web streams from online radio stations. It should support up to 100 alarms that play a radio stream if the alarm time is reached. When an Alarm goes offhe volume of the Playback is gradually increased to a configurable maximum Volume within a configurable ammount of time. The playback of the stream must be monitored so playback is guaranteed. In case of a WIFI outage or other streaming problems it shall play an MP3 file from the SD card as a fallback. The duration and volume of the alarm should be configurable. It must be able to support One-Time alarms as well as repeat alarms that can be set per weekday.
All configuration data should be stored and read from a JSON config file on the SD card. 
The base screen should show the current date and time and the next alarm that is set. The current time is displayed in Hours, Minutes and seconds and should be in a large font while the seconds use a font about 50% of the size the Hours and Minutes are shown. The current date Shall be displayed above the current time, in format “Weekday – day.month.year” using a font which is about 25% the size of the time displayed. Below the time it shall show the date and time of the next active alarm. Overall, the date and time display take up approximately 75% of the screen. At the bottom of the base screen there should be a toggle button to switch all alarms on or off. A 2rd button takes me to the alarm settings where new alarms can be added or existing ones changed. A 3rd button brings me to the radio station selection screen. A 4th button brings me to the general settings screen. 
On the top of the base screen there should be a status bar showing the WIFI SSID it is connected to, the quality of connection and the IP address of the device. 
To the right of the base screen, there shall be a square box, about 25% wide, showing the air quality, humidity and temperature from the SGP30 and SHT31. That box has a changing background colour from green to red depending on the current TVOC measurement.
There shall be another 25% wide box below the air quality display showing the current weather and temperature in my location from openweathermap.org using the API key stored in the configuration file. The weather is shown as an icon of the current weather with the current temperature in Celsius to the right and the perceived temperature below. 
Below that box there shall be two more boxes showing todays weather forecast in the morning and afternoon, including rain probability. 
The base screen should use a black background and a dark colour scheme. The screen brightness must be adjustable in the settings panel and vary depending on the attached light sensor. The darker it gets in the room the dimmer the screen should be. The screen gets as maximum as bright as configured in the settings and minimum as dim as it is still just visible. The screen brightness is PWM controlled via GPIO 44.
Touching the alarm settings button brings me to a new screen where I can configure alarms. On the top there is input form where I can select the time of the alarm and the weekdays when it shall be active. Below that there is a list of existing alarms.
Touching the settings button should bring me to a settings panel. There shall be a general settings panel where I can configure the Wifi SSID and password, my location for the weather forecast, the maximum brightness of the base screen and if the light sensor should influence the brightness, the duration how long an alarm is played, the volume of the sound and what mp3 file should be played as a backup in case of web playback problems. There should be another setting panel to insert update and delete web radio stations. Another settings panel is required to add or remove alarms. The number of alarms that can be added should be unlimited. All alarms can be one-time alarms on a specific date and time or repeated based on the weekday. Each alarm has a toggle switch to activate or deactivate it.
Browsing to the ip address of the devices brings me to a web interface. Here I can maintain all the settings available via the display panel allowing me to create, update, delete alarms and change the general settings.
I want to be able to update the firmware via OTA.
I want to be able to compile the code with debugger support.
